#include <bits/stdc++.h>
#define endl "\n"

using namespace std;

int main() {

    ios_base::sync_with_stdio(false);
    cin.tie(NULL);
    cout.tie(NULL);

/*
    set<int> possible;

    for (int i = 0; i <= 3; i++) {
        for (int j = 1; j <= 20; j++) {
            possible.insert(i * j);
        }
    }

    possible.insert(50);

    for (int num = 1; num <= 180; num++) {
        map<vector<int>, bool> used;
        int perm = 0;
        int comb = 0;
        for (auto i : possible) {
            for (auto j : possible) {
                for (auto k : possible) {
                    int sum = i + j + k;
                    if (sum == num) {
                        vector<int> v = {i, j, k};
                        sort(v.begin(), v.end());
                        perm++;
                        if (used[v]) continue;
                        used[v] = true;
                        comb++;
                    }
                }
            }
        }
        cout << "perm[" << num << "] = " << perm << ";" << endl;
        cout << "comb[" << num << "] = " << comb << ";" << endl;
    }
*/

    int perm[200];
    int comb[200];

    perm[1] = 3;
    comb[1] = 1;
    perm[2] = 6;
    comb[2] = 2;
    perm[3] = 10;
    comb[3] = 3;
    perm[4] = 15;
    comb[4] = 4;
    perm[5] = 21;
    comb[5] = 5;
    perm[6] = 28;
    comb[6] = 7;
    perm[7] = 36;
    comb[7] = 8;
    perm[8] = 45;
    comb[8] = 10;
    perm[9] = 55;
    comb[9] = 12;
    perm[10] = 66;
    comb[10] = 14;
    perm[11] = 78;
    comb[11] = 16;
    perm[12] = 91;
    comb[12] = 19;
    perm[13] = 105;
    comb[13] = 21;
    perm[14] = 120;
    comb[14] = 24;
    perm[15] = 136;
    comb[15] = 27;
    perm[16] = 153;
    comb[16] = 30;
    perm[17] = 171;
    comb[17] = 33;
    perm[18] = 190;
    comb[18] = 37;
    perm[19] = 210;
    comb[19] = 40;
    perm[20] = 231;
    comb[20] = 44;
    perm[21] = 253;
    comb[21] = 48;
    perm[22] = 276;
    comb[22] = 52;
    perm[23] = 297;
    comb[23] = 55;
    perm[24] = 319;
    comb[24] = 60;
    perm[25] = 339;
    comb[25] = 62;
    perm[26] = 360;
    comb[26] = 67;
    perm[27] = 382;
    comb[27] = 70;
    perm[28] = 405;
    comb[28] = 75;
    perm[29] = 426;
    comb[29] = 77;
    perm[30] = 448;
    comb[30] = 83;
    perm[31] = 468;
    comb[31] = 84;
    perm[32] = 489;
    comb[32] = 90;
    perm[33] = 511;
    comb[33] = 92;
    perm[34] = 534;
    comb[34] = 98;
    perm[35] = 555;
    comb[35] = 99;
    perm[36] = 577;
    comb[36] = 106;
    perm[37] = 597;
    comb[37] = 106;
    perm[38] = 618;
    comb[38] = 113;
    perm[39] = 640;
    comb[39] = 114;
    perm[40] = 663;
    comb[40] = 121;
    perm[41] = 684;
    comb[41] = 121;
    perm[42] = 706;
    comb[42] = 129;
    perm[43] = 726;
    comb[43] = 128;
    perm[44] = 744;
    comb[44] = 135;
    perm[45] = 763;
    comb[45] = 135;
    perm[46] = 783;
    comb[46] = 141;
    perm[47] = 798;
    comb[47] = 140;
    perm[48] = 820;
    comb[48] = 148;
    perm[49] = 834;
    comb[49] = 146;
    perm[50] = 852;
    comb[50] = 153;
    perm[51] = 868;
    comb[51] = 152;
    perm[52] = 888;
    comb[52] = 159;
    perm[53] = 900;
    comb[53] = 157;
    perm[54] = 925;
    comb[54] = 166;
    perm[55] = 936;
    comb[55] = 163;
    perm[56] = 951;
    comb[56] = 170;
    perm[57] = 961;
    comb[57] = 168;
    perm[58] = 978;
    comb[58] = 174;
    perm[59] = 984;
    comb[59] = 171;
    perm[60] = 1009;
    comb[60] = 180;
    perm[61] = 1014;
    comb[61] = 176;
    perm[62] = 1026;
    comb[62] = 182;
    perm[63] = 1027;
    comb[63] = 178;
    perm[64] = 1038;
    comb[64] = 184;
    perm[65] = 1035;
    comb[65] = 179;
    perm[66] = 1054;
    comb[66] = 187;
    perm[67] = 1053;
    comb[67] = 182;
    perm[68] = 1056;
    comb[68] = 187;
    perm[69] = 1056;
    comb[69] = 183;
    perm[70] = 1059;
    comb[70] = 187;
    perm[71] = 1047;
    comb[71] = 181;
    perm[72] = 1063;
    comb[72] = 188;
    perm[73] = 1047;
    comb[73] = 181;
    perm[74] = 1044;
    comb[74] = 184;
    perm[75] = 1035;
    comb[75] = 179;
    perm[76] = 1032;
    comb[76] = 182;
    perm[77] = 1008;
    comb[77] = 174;
    perm[78] = 1024;
    comb[78] = 181;
    perm[79] = 996;
    comb[79] = 172;
    perm[80] = 990;
    comb[80] = 175;
    perm[81] = 976;
    comb[81] = 170;
    perm[82] = 969;
    comb[82] = 171;
    perm[83] = 930;
    comb[83] = 161;
    perm[84] = 949;
    comb[84] = 168;
    perm[85] = 906;
    comb[85] = 157;
    perm[86] = 906;
    comb[86] = 160;
    perm[87] = 885;
    comb[87] = 154;
    perm[88] = 885;
    comb[88] = 156;
    perm[89] = 834;
    comb[89] = 144;
    perm[90] = 862;
    comb[90] = 153;
    perm[91] = 810;
    comb[91] = 140;
    perm[92] = 813;
    comb[92] = 144;
    perm[93] = 792;
    comb[93] = 138;
    perm[94] = 786;
    comb[94] = 139;
    perm[95] = 729;
    comb[95] = 126;
    perm[96] = 760;
    comb[96] = 135;
    perm[97] = 699;
    comb[97] = 121;
    perm[98] = 705;
    comb[98] = 125;
    perm[99] = 685;
    comb[99] = 120;
    perm[100] = 678;
    comb[100] = 120;
    perm[101] = 618;
    comb[101] = 107;
    perm[102] = 655;
    comb[102] = 118;
    perm[103] = 588;
    comb[103] = 102;
    perm[104] = 591;
    comb[104] = 106;
    perm[105] = 579;
    comb[105] = 102;
    perm[106] = 558;
    comb[106] = 100;
    perm[107] = 507;
    comb[107] = 88;
    perm[108] = 547;
    comb[108] = 99;
    perm[109] = 480;
    comb[109] = 84;
    perm[110] = 483;
    comb[110] = 87;
    perm[111] = 477;
    comb[111] = 85;
    perm[112] = 450;
    comb[112] = 81;
    perm[113] = 399;
    comb[113] = 70;
    perm[114] = 445;
    comb[114] = 82;
    perm[115] = 375;
    comb[115] = 66;
    perm[116] = 375;
    comb[116] = 69;
    perm[117] = 379;
    comb[117] = 69;
    perm[118] = 342;
    comb[118] = 63;
    perm[119] = 306;
    comb[119] = 54;
    perm[120] = 349;
    comb[120] = 65;
    perm[121] = 279;
    comb[121] = 50;
    perm[122] = 279;
    comb[122] = 52;
    perm[123] = 288;
    comb[123] = 53;
    perm[124] = 246;
    comb[124] = 46;
    perm[125] = 219;
    comb[125] = 39;
    perm[126] = 268;
    comb[126] = 51;
    perm[127] = 195;
    comb[127] = 35;
    perm[128] = 198;
    comb[128] = 38;
    perm[129] = 219;
    comb[129] = 41;
    perm[130] = 165;
    comb[130] = 32;
    perm[131] = 153;
    comb[131] = 27;
    perm[132] = 198;
    comb[132] = 38;
    perm[133] = 126;
    comb[133] = 23;
    perm[134] = 132;
    comb[134] = 26;
    perm[135] = 160;
    comb[135] = 31;
    perm[136] = 105;
    comb[136] = 21;
    perm[137] = 102;
    comb[137] = 18;
    perm[138] = 147;
    comb[138] = 29;
    perm[139] = 78;
    comb[139] = 14;
    perm[140] = 87;
    comb[140] = 18;
    perm[141] = 117;
    comb[141] = 23;
    perm[142] = 63;
    comb[142] = 13;
    perm[143] = 66;
    comb[143] = 11;
    perm[144] = 103;
    comb[144] = 21;
    perm[145] = 45;
    comb[145] = 8;
    perm[146] = 54;
    comb[146] = 11;
    perm[147] = 84;
    comb[147] = 17;
    perm[148] = 36;
    comb[148] = 8;
    perm[149] = 42;
    comb[149] = 7;
    perm[150] = 73;
    comb[150] = 16;
    perm[151] = 21;
    comb[151] = 4;
    perm[152] = 33;
    comb[152] = 7;
    perm[153] = 55;
    comb[153] = 12;
    perm[154] = 15;
    comb[154] = 4;
    perm[155] = 24;
    comb[155] = 4;
    perm[156] = 45;
    comb[156] = 10;
    perm[157] = 9;
    comb[157] = 2;
    perm[158] = 18;
    comb[158] = 4;
    perm[159] = 36;
    comb[159] = 8;
    perm[160] = 6;
    comb[160] = 2;
    perm[161] = 12;
    comb[161] = 2;
    perm[162] = 28;
    comb[162] = 7;
    perm[163] = 0;
    comb[163] = 0;
    perm[164] = 9;
    comb[164] = 2;
    perm[165] = 21;
    comb[165] = 5;
    perm[166] = 0;
    comb[166] = 0;
    perm[167] = 6;
    comb[167] = 1;
    perm[168] = 15;
    comb[168] = 4;
    perm[169] = 0;
    comb[169] = 0;
    perm[170] = 3;
    comb[170] = 1;
    perm[171] = 10;
    comb[171] = 3;
    perm[172] = 0;
    comb[172] = 0;
    perm[173] = 0;
    comb[173] = 0;
    perm[174] = 6;
    comb[174] = 2;
    perm[175] = 0;
    comb[175] = 0;
    perm[176] = 0;
    comb[176] = 0;
    perm[177] = 3;
    comb[177] = 1;
    perm[178] = 0;
    comb[178] = 0;
    perm[179] = 0;
    comb[179] = 0;
    perm[180] = 1;
    comb[180] = 1;

    int num;
    while (cin >> num, num > 0) {
        if (num > 180 || perm[num] == 0) {
            cout << "THE SCORE OF " << num << " CANNOT BE MADE WITH THREE DARTS." << endl;
        } else {
            cout << "NUMBER OF COMBINATIONS THAT SCORES " << num << " IS " << comb[num] << "." << endl <<
                    "NUMBER OF PERMUTATIONS THAT SCORES " << num << " IS " << perm[num] << "." << endl;
        }
        cout << "**********************************************************************" << endl;
    }
    cout << "END OF OUTPUT" << endl;

    return 0;
}